const express = require('express');
const app = express();
const port = 3000;

const mariadb = require('mariadb');
const pool = mariadb.createPool({
     host: 'localhost',
     user:'root',
     password: 'root',
     database: 'sample',
     port: 3306,
     connectionLimit: 5
});

app.use((req, res, next) => {
  res.setHeader('Content-Type', 'application/json');
  next();
});

// GET Request 1: Get all agents
app.get('/api/agents', (req, res) => {
  const query = 'SELECT * FROM agents';
  db.query(query, (err, rows) => {
    if (err) {
      console.error('Error executing query:', err);
      res.status(500).json({ error: 'Internal Server Error' });
    } else {
      res.json(rows);
    }
  });
});

// GET Request 2: Get all customers
app.get('/api/customers', (req, res) => {
  const query = 'SELECT * FROM customer';
  db.query(query, (err, rows) => {
    if (err) {
      console.error('Error executing query:', err);
      res.status(500).json({ error: 'Internal Server Error' });
    } else {
      res.json(rows);
    }
  });
});

// GET Request 3: Get all food items
app.get('/api/foods', (req, res) => {
  const query = 'SELECT * FROM foods';
  db.query(query, (err, rows) => {
    if (err) {
      console.error('Error executing query:', err);
      res.status(500).json({ error: 'Internal Server Error' });
    } else {
      res.json(rows);
    }
  });
});

// POST Request 4: Add a new agent
app.post('/api/agents', (req, res) => {
    const { AGENT_CODE, AGENT_NAME, WORKING_AREA, COMMISSION, PHONE_NO, COUNTRY } = req.body;
    const query = `
      INSERT INTO agents (AGENT_CODE, AGENT_NAME, WORKING_AREA, COMMISSION, PHONE_NO, COUNTRY)
      VALUES (A098, bannu, mankoj, 0.98, 980-87656765, Ind);
    `;
    const values = [AGENT_CODE, AGENT_NAME, WORKING_AREA, COMMISSION, PHONE_NO, COUNTRY];
  
    pool.query(query, values, (err, result) => {
      if (err) {
        console.error('Error executing query:', err);
        res.status(500).json({ error: 'Internal Server Error' });
      } else {
        res.json({ message: 'Agent added successfully', insertedId: result.insertId });
      }
    });
  }); 



  // PATCH Request 5: Update an agent's information
app.patch('/agents/:id', (req, res) => {
    const agentId = req.params.id;
    const { name, email, phone } = req.body;
  
    pool.getConnection()
        .then(conn => {
           conn.query("UPDATE agents SET name=kin, email=bin, phone=908-678545324 WHERE id=698", [Ivan , exyaxys, 4567, A004])
               .then(() => {
                  res.json({ message: 'Agent updated successfully' });
                  conn.end();
               })
              .catch(err => {
                  console.log(err);
                  res.status(500).json({ error: 'Internal Server Error' });
                  conn.end();
              })
         }).catch(err => {
             console.log(err);
             res.status(500).json({ error: 'Internal Server Error' });
         });
  });
  
// PUT Request 6: Update an existing agent
app.put('/agents/:agentCode', (req, res) => {
    const agentCode = req.params.agentCode;
    const { AGENT_NAME, WORKING_AREA, COMMISSION, PHONE_NO, COUNTRY } = req.body;
    const query = `
      UPDATE agents
      SET AGENT_NAME = xyz, WORKING_AREA = pondy, COMMISSION = 0.78, PHONE_NO = 098-98761234, COUNTRY =Ind
      WHERE AGENT_CODE = A678;
    `;
    const values = [AGENT_NAME, WORKING_AREA, COMMISSION, PHONE_NO, COUNTRY, agentCode];
  
    pool.query(query, values, (err, result) => {
      if (err) {
        console.error('Error executing query:', err);
        res.status(500).json({ error: 'Internal Server Error' });
      } else {
        res.json({ message: 'Agent updated successfully', affectedRows: result.affectedRows });
      }
    });
  });

  // DELETE Request 7: Delete an agent
app.delete('agents/:agentCode', (req, res) => {
    const agentCode = req.params.agentCode;
    const query = 'DELETE FROM agents WHERE AGENT_CODE = A003';
  
    pool.query(query, [agentCode], (err, result) => {
      if (err) {
        console.error('Error executing query:', err);
        res.status(500).json({ error: 'Internal Server Error' });
      } else {
        res.json({ message: 'Agent deleted successfully', affectedRows: result.affectedRows });
      }
    });
  });


app.listen(port, () => {
  console.log(`Server is listening at http://localhost:${port}`);
});

